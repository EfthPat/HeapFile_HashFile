/home/timos/Downloads/sdi1300140_sdi1300141Συμμετέχοντες :

 # Γιώργος - Μάριος Πατέλης - A.M : 1115201300140

 # Ευθύμιος Πατέλης - Α.Μ : 1115201300141

------------

Περιβάλλον υλοποίησης :

 # Windows

 # Linux

------------

Πλατφόρμα υλοποίησης :

 # CLion

------------


Σχεδιαστικές επιλογές Heap - File :


   - Τα διπλότυπα IDS επιτρέπονται όπως αναφέρεται και στην εκφώνηση


   - Το 1ο byte του 1ου Block του Heap - File πρέπει να έχει την τιμή HEAP_FILE_IDENTIFIER όπως αυτή ορίζεται στο hp_file.h
     Αυτό συμβαίνει για να γνωρίζουμε αν το αρχείο που ανοίχθηκε αφορά Heap - File


   - Το 1ο Block του Heap - File περιέχει επίσης, αμέσως μετά το HEAP_FILE_IDENTIFIER, ενα instance της δομής HP_INFO, η οποία περιέχει τις παρακάτω πληροφορίες :

      # Το μέγιστο αριθμό εγγραφών που μπορεί να αποθηκεύσει ενα Block

      # Το index του τελευταίου Block του Heap - File

      # Το index του block στο οποίο αποθηκεύεται το ίδιο το instance το οποίο είναι πάντα το Block με index 0

      # Τον file descriptor που αντιστοιχεί στο ανοιχτό Heap - File


   - Το κάθε Block του Heap - File, εκτός απο τις εγγραφές, περιέχει στο τέλος του ενα instance της δομής HP_BLOCK_INFO, η οποία περιέχει τις παρακάτω πληροφορίες :

      # Το index του επόμενου Block. Σε περίπτωση που αυτό δεν υπάρχει το index έχει την τιμή NONE όπως αυτή ορίζεται στο hp_file.h

      # Τον συνολικό αριθμό των εγγραφών στο εκάστοτε Block


   - Τα Blocks του Heap - File δεσμεύονται κατά απαίτηση και οχι proactively


   - Κατά το κλείσιμο του Heap - File ελέγχεται αν υπάρχουν κάποιες αλλαγές στην δυναμικά δεσμευμένη δομή HP_INFO και εφόσον αυτό ισχύει αυτές αντικατοπτρίζονται στο 1ο Block του Heap - File


   - Κατά τη 2η + εκτέλεση του προγράμματος θα προκύψει το σφάλμα : BF Error: The file is already being used
     Το παραπάνω οφείλεται στο οτι το αρχείο υπάρχει ηδη και έτσι θα αποτύχει η δημιουργία του, συνεπώς κατά τη 2η + εκτέλεση αγνοήστε το


   - Ο κώδικας είναι πλήρως σχολιασμένος


   - Για την δημιουργία του εκτελέσιμου απαιτείται η εκτέλεση της εντολής : make hp


   - Το εκτελέσιμο θα βρίσκεται με το όνομα hp_main στο directory examples


   - Έχει υλοποιηθεί η βοηθητική συνάρτηση completeHeapFile για την εκτύπωση των περισσοτέρων πληροφοριών του Heap - File


------------


Σχεδιαστικές επιλογές Hash - File :


 - Τα διπλότυπα IDS επιτρέπονται όπως αναφέρεται και στην εκφώνηση


 - Το 1ο byte του 1ου Block του Hash - File πρέπει να έχει την τιμή HASH_FILE_IDENTIFIER όπως αυτή ορίζεται στο ht_table.h
   Αυτό συμβαίνει για να γνωρίζουμε αν το αρχείο που ανοίχθηκε αφορά Hash - File


 - Το 1ο Block του Hash - File περιέχει τον πίνακα κατακερματισμού.
   Αυτός έχει μέγιστο μέγεθος MAX_BUCKETS έτσι ώστε τα μεταταδεδομένα του Hash - File να βρίσκονται εξ' ολοκλήρου στο 1ο Block του
   Ο πίνακας κατακερματισμού περιέχει την πληροφορία για το σε ποιο Block αντιστοιχεί το εκάστοτε Bucket Index ([0...|Buckets| - 1]) η οποία ενημερώνεται σε περίπτωση overflow.


 - Το 1ο Block του Hash - File περιέχει επίσης τις παρακάτω πληροφορίες :

    # Μέγιστο αριθμό εγγραφών ανα Block

    # Συνολικό αριθμό εγγραφών στο Hash - File

    # Συνολικό αριθμό απο Blocks που απαρτίζουν το Hash - File

    # Τον file descriptor που αντιστοιχεί στο ανοιχτό Hash - File

    # Τον συνολικό αριθμό των Buckets του Hash - File


 - Το κάθε Bucket/Overflow-Bucket του Hash - File περιέχει τις παρακάτω πληροφορίες :

    # Το index του προηγουμένου Block υπερχείλισης. Σε περίπτωση που αυτό δεν υπάρχει το index έχει την τιμή NONE όπως αυτή ορίζεται στο ht_table.h

    # Τον συνολικό αριθμό των εγγραφών στο εκάστοτε Block

    # Τον συνολικό αριθμό απο Blocks που απαρτίζουν το εκάστοτε Bucket μέχρι και το εκάστοτε Block

    # Το συνολικό αριθμό απο Records που βρίσκονται στο εκάστοτε Bucket μέχρι και το εκάστοτε Block

    # Οι τελευταίες 2 πληροφορίες αποσκοπούν στο να μην χρειάζεται να διατρέξουμε ολόκληρη την αλυσίδα απο Blocks του εκάστοτε Bucket για την HashStatistics


 - Οι παραπάνω πληροφορίες βρίσκονται στην αρχή κάθε Bucket αφού αυτό δίνεται ως επιλογή απο την εκφώνηση :

     "Επιπλέον στο τέλος (ή στην αρχή) κάθε block θα πρέπει να υπάρχει μία δομή στην οποία θα
     αποθηκεύετε πληροφορίες σε σχέση με το block όπως: τον αριθμό των εγγραφών στο συγκεκριμένο
     block, έναν δείκτη στο επόμενο block δεδομένων (block υπερχείλισης)"


 - Τα Buckets του Hash - File δεσμεύονται κατά απαίτηση και οχι proactively


 - Κατά το κλείσιμο του Hash - File ελέγχεται αν υπάρχουν κάποιες αλλαγές στην δυναμικά δεσμευμένη δομή HT_INFO και εφόσον αυτό ισχύει αυτές αντικατοπτρίζονται στο 1ο Block του Hash - File


 - Κατά τη 2η + εκτέλεση του προγράμματος θα προκύψει το σφάλμα : BF Error: The file is already being used
   Το παραπάνω οφείλεται στο οτι το αρχείο υπάρχει ηδη και έτσι θα αποτύχει η δημιουργία του, συνεπώς κατά τη 2η + εκτέλεση αγνοήστε το


 - Ο κώδικας είναι πλήρως σχολιασμένος


 - Για την δημιουργία του εκτελέσιμου απαιτείται η εκτέλεση της εντολής : make ht


 - Το εκτελέσιμο θα βρίσκεται με το όνομα ht_main στο directory examples


 - Για τα στατιστικά του αρχείου έχει δημιουργηθεί η main με το όνομα ht_st_main.c


 - Για την δημιουργία του εκτελέσιμου απαιτείται η εκτέλεση της εντολής : make st


 - Το εκτελέσιμο θα βρίσκεται με το όνομα ht_st_main στο directory examples


 - Έχει υλοποιηθεί η βοηθητική συνάρτηση completeHashFile για την εκτύπωση των περισσοτέρων πληροφοριών του Hash - File


------------


Γενικές παρατηρήσεις :


 - Το εκάστοτε εκτελέσιμο έστω ΕΧΕ θα πρέπει να εκτελεστεί ως εξής : ./examples/EXE αφού σε διαφορετική περίπτωση προκύπτει το σφάλμα error while loading shared libraries: libbf.so: cannot open shared object file: No such file or directory